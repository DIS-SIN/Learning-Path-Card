{"version":3,"sources":["LearningPathCard.module.css","Creator.module.css","LearningPathCard.js","Creator.js","reportWebVitals.js","index.js","App.js"],"names":["module","exports","LearningPathCard","props","className","styles","link","href","cardContent","target","card","image","src","imageLink","alt","imageAltTxt","content","topContent","tag","tagLink","tagTitle","timeStamps","platform","readTime","bottomContent","title","description","Creator","useState","language","setCardContent","generatedCode","setGeneratedCode","updateContent","ev","key","value","container","form","FormControl","component","FormLabel","RadioGroup","aria-label","name","defaultValue","onChange","FormControlLabel","control","Radio","label","TextField","type","Button","variant","color","button","onClick","window","location","origin","encodeURI","JSON","stringify","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exact","path","decodeURI","parse","queryString","search","document","getElementById"],"mappings":"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","file":"static/js/main.1fe3864f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LearningPathCard_link__3uf_Y\",\"card\":\"LearningPathCard_card__KCEkG\",\"image\":\"LearningPathCard_image__4Abzr\",\"content\":\"LearningPathCard_content__2uQEl\",\"topContent\":\"LearningPathCard_topContent__mqIUl\",\"bottomContent\":\"LearningPathCard_bottomContent__3NHdU\",\"tag\":\"LearningPathCard_tag__23wMu\",\"title\":\"LearningPathCard_title__1Az7A\",\"description\":\"LearningPathCard_description__25X7Q\",\"timeStamps\":\"LearningPathCard_timeStamps__ahYJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Creator_container__28vaL\",\"form\":\"Creator_form__1Pd1C\",\"button\":\"Creator_button__3ZIgX\",\"generatedCode\":\"Creator_generatedCode__2xpc3\"};","import styles from './LearningPathCard.module.css';\n\nexport default function LearningPathCard(props) {\n\n    return (\n        <a className={styles.link} href={props.cardContent.link} target=\"_blank\">\n            <div className={styles.card}>\n                <img className={styles.image} src={props.cardContent.imageLink} alt={props.cardContent.imageAltTxt}/>\n                <div className={styles.content}>\n                    <div className={styles.topContent}>\n                        <a className={styles.tag} href={props.cardContent.tagLink}>{props.cardContent.tagTitle}</a>\n                        <p className={styles.timeStamps}>{props.cardContent.platform}<span>â€¢</span>{props.cardContent.readTime}</p>\n                    </div>\n                    <div className={styles.bottomContent}>\n                        <h2 className={styles.title}>{props.cardContent.title}</h2>\n                        <p className={styles.description}>{props.cardContent.description}</p>\n                    </div>\n                </div>\n            </div>\n        </a>\n    );\n}","import React, { useState } from 'react';\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, TextField, InputAdornment, Button } from '@material-ui/core';\nimport LearningPathCard from './LearningPathCard';\nimport styles from './Creator.module.css';\n\nexport default function Creator() {\n\n    const [cardContent, setCardContent] = useState({\n        language: \"en\",\n        link: \"\",\n        title: \"\",\n        description: \"\",\n        imageLink: \"\",\n        imageAltTxt: \"\",\n        tagTitle: \"\",\n        tagLink: \"\",\n        platform: \"\",\n        readTime: \"\"\n    });\n    const [generatedCode, setGeneratedCode] = useState(null);\n\n    function updateContent(ev, key) {\n        setCardContent({\n            ...cardContent,\n            [key]: ev.target.value  \n        });\n    }\n\n    function generateCode() {\n        setGeneratedCode(`<iframe style=\"width:100%;border:none\" src=\"${window.location.origin}/Learning-Path-Card/#/?cardContent=${encodeURI(JSON.stringify(cardContent))}\" title=\"${cardContent.title}\"></iframe>`);\n    }\n\n    return (\n        <div className={styles.container}>\n            <h1>Card Creator</h1>\n            <form className={styles.form}>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Language</FormLabel>\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" defaultValue=\"en\" onChange={ev => updateContent(ev, \"language\")}>\n                        <FormControlLabel value=\"en\" control={<Radio />} label=\"English\" />\n                        <FormControlLabel value=\"fr\" control={<Radio />} label=\"French\" />\n                    </RadioGroup>\n                </FormControl>\n                <TextField type=\"url\" label=\"Link\" onChange={ev => updateContent(ev, \"link\")}/>\n                <TextField label=\"Title\" onChange={ev => updateContent(ev, \"title\")}/>\n                <TextField label=\"Description\" onChange={ev => updateContent(ev, \"description\")}/>\n                <TextField type=\"url\" label=\"Image link\" onChange={ev => updateContent(ev, \"imageLink\")}/>\n                <TextField label=\"Image alt text\" onChange={ev => updateContent(ev, \"imageAltTxt\")}/>\n                <TextField label=\"Tag title\" onChange={ev => updateContent(ev, \"tagTitle\")}/>\n                <TextField label=\"Tag link\" onChange={ev => updateContent(ev, \"tagLink\")}/>\n                <TextField label=\"Platform\" onChange={ev => updateContent(ev, \"platform\")}/>\n                <TextField label=\"Read time\" onChange={ev => updateContent(ev, \"readTime\")}/>\n            </form>\n            <Button variant=\"contained\" color=\"primary\" className={styles.button} onClick={generateCode}>Generate Code</Button>\n            <LearningPathCard cardContent={cardContent}/>\n            {generatedCode &&\n                <React.Fragment>\n                    <h2>Generated!</h2>\n                    <div className={styles.generatedCode}>\n                        {generatedCode}\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport Creator from './Creator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Route exact path=\"/\" component={App}/>\n            <Route path=\"/creator\" component={() => <Creator/>}/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import queryString from 'query-string';\nimport LearningPathCard from './LearningPathCard';\nimport './App.css';\n\nexport default function App(props) {\n\n    return (\n        <LearningPathCard cardContent={decodeURI(JSON.parse(queryString.parse(props.location.search).cardContent))}/>\n    );\n}"],"sourceRoot":""}